---
# Implement your Workload deployment tasks here

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# 1. Ensure we're connected to the OCP Cluster
# 2. Make a temporary dir for cloning the deploy repo
# 3. Clone the deploy repository
# 4. Run the deploy script
- name: Ensure there is connectivity to OCP cluster as system:admin
  command: oc whoami
  register: whoami

- name: Fail if not system:admin
  fail:
    msg: "Not connected to OCP as system:admin"
  when: whoami.stdout != "system:admin"

- name: Ensure deploy repository is cloned (1/3) - Ensure directory is removed if it already exists
  file:
    path: "deploy"
    state: absent
  become: true

- name: Ensure deploy repository is cloned (2/3) - Clone the repository
  git:
    repo: "{{ _acm_install_repo }}"
    dest: "deploy"
    version: "{{ _acm_install_repo_branch }}"

- name: Ensure deploy repository is cloned (3/3) - Ensure Quay.io pull secret is present
  copy:
    src: "./files/pull-secret.yaml"
    dest: deploy/prereqs/pull-secret.yaml

- name: Configure required Snapshot version
  template:
    src: ./templates/snapshot.j2
    dest: deploy/snapshot.ver

- name: Run ACM Deployment Script - This might take a while
  shell: "./start.sh --watch --silent > deploy_from_ansible.log"
  args:
    chdir: deploy/
    creates: deploy_from_ansible.log

- name: Ensure helper scripts are Deployed
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    mode: 0755
  become: true
  loop:
    - ./files/wait-for-deployment
    - ./files/verify-contexts

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool