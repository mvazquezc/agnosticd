---
# Implement your Workload removal tasks here

# 1. Ensure we're connected to the cluster
# 2. Make a temporary dir for cloning the deploy repo
# 3. Clone the deploy repository
# 4. Run the uninstall script


- name: Ensure there is connectivity to OCP cluster as system:admin
  command: oc whoami
  register: whoami

- name: Fail if not system:admin
  fail:
    msg: "Not connected to OCP as system:admin"
  when: whoami.stdout != "system:admin"

- name: Ensure deploy repository is cloned (1/2) - Ensure directory is removed if it already exists
  file:
    path: "deploy"
    state: absent
  become: true

- name: Ensure deploy repository is cloned (2/2) - Clone the repository
  git:
    repo: "{{ _acm_install_repo }}"
    dest: "deploy"
    version: "{{ _acm_install_repo_branch }}"

- name: Modify uninstall script to make it non-interactive
  lineinfile:
    path: "deploy/clean-clusters.sh"
    regexp: "^read -r DESTROY_YES"
    line: "DESTROY_YES=DESTROY"

- name: Run ACM Uninstall Script - This might take a while
  shell: "./uninstall.sh > uninstall_from_ansible.log"
  args:
    chdir: deploy/
    creates: uninstall_from_ansible.log

- name: Ensure helper scripts are removed
  file:
    path: "{{ item }}"
    state: absent
  become: true
  loop:
    - ./files/wait-for-deployment
    - ./files/verify-contexts

- name: Ensure Cloned Repository is Removed
  file:
    path: "deploy"
    state: absent
  become: true

# Leave this as the last task in the playbook.
- name: remove_workload tasks complete
  debug:
    msg: "Remove Workload tasks completed successfully."
  when: not silent|bool
